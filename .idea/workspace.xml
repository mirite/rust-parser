<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="CargoProjects">
    <cargoProject FILE="$PROJECT_DIR$/Cargo.toml" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="e0a5c18e-66cc-4dfe-af26-0975bc296323" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/tests/mod.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/tests/mod.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/tests/tree.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/tests/tree.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/tree.rs" beforeDir="false" afterPath="$PROJECT_DIR$/src/tree.rs" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ComposerSettings">
    <execution />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Rust File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;mirite&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;git@github.com:mirite/rust-parser.git&quot;,
    &quot;accountId&quot;: &quot;cc096ab2-3a9a-4733-a4b0-9491b25a0b25&quot;
  }
}</component>
  <component name="GoLibraries">
    <option name="urls">
      <list>
        <option value="file:$PROJECT_DIR$/../go" />
      </list>
    </option>
    <option name="useGoPathFromSystemEnvironment" value="false" />
  </component>
  <component name="MacroExpansionManager">
    <option name="directoryName" value="trq7btb0" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectCodeStyleSettingsMigration">
    <option name="version" value="2" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 2
}</component>
  <component name="ProjectId" id="2iIF60RMe3U1PtMadvybjhEJJRp" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "Cargo.Run rust-parser.executor": "Run",
    "Cargo.Test tests::tests.executor": "Run",
    "Cargo.Test tests::tests::comments.executor": "Debug",
    "Cargo.Test tests::tests::it_works.executor": "Run",
    "Cargo.Test tests::tests::simple_string.executor": "Debug",
    "Cargo.Test tests::tests::trailing_text.executor": "Debug",
    "Cargo.Test tests::tests::unmatched_tags.executor": "Run",
    "Cargo.Test tests::tree::tests::it_can_handle_a_nested_tree.executor": "Debug",
    "Cargo.Test tests::tree::tests::it_can_handle_a_simple_tree.executor": "Run",
    "Cargo.Test tree::tests.executor": "Run",
    "Cargo.Test tree_tests::tests.executor": "Run",
    "Cargo.Test tree_tests::tests::it_can_handle_a_simple_tree.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.laravel-idea.search-composer-json": "true",
    "RunOnceActivity.rust.reset.selective.auto.import": "true",
    "git-widget-placeholder": "main",
    "go.import.settings.migrated": "true",
    "ignore.virus.scanning.warn.message": "true",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "//wsl.localhost/Ubuntu-20.04/home/jesse/rust-parser",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "org.rust.cargo.project.model.PROJECT_DISCOVERY": "true",
    "org.rust.disableDetachedFileInspection//wsl.localhost/Ubuntu-20.04/home/jesse/rust-parser/src/tests/tokenizer.rs": "true",
    "settings.editor.selected.configurable": "reference.settings.grazie.pro",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="\\wsl.localhost\Ubuntu-20.04\home\jesse\rust-parser\src\tests" />
    </key>
  </component>
  <component name="RsExternalLinterProjectSettings">
    <option name="tool" value="Clippy" />
  </component>
  <component name="RunManager" selected="Cargo.Test tests::tree::tests::it_can_handle_a_nested_tree">
    <configuration name="Test tests::tree::tests::it_can_handle_a_nested_tree" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package rust-parser --bin rust-parser tests::tree::tests::it_can_handle_a_nested_tree -- --exact" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test tests::tree::tests::it_can_handle_a_simple_tree" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package rust-parser --bin rust-parser tests::tree::tests::it_can_handle_a_simple_tree -- --exact" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test tree::tests" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package rust-parser --bin rust-parser tests::tree::tests" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test tree_tests::tests" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package rust-parser --bin rust-parser tree_tests::tests" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test tree_tests::tests::it_can_handle_a_simple_tree" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package rust-parser --bin rust-parser tree_tests::tests::it_can_handle_a_simple_tree -- --exact" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Cargo.Test tests::tree::tests::it_can_handle_a_nested_tree" />
        <item itemvalue="Cargo.Test tree::tests" />
        <item itemvalue="Cargo.Test tests::tree::tests::it_can_handle_a_simple_tree" />
        <item itemvalue="Cargo.Test tree_tests::tests" />
      </list>
    </recent_temporary>
  </component>
  <component name="RustProjectSettings">
    <option name="toolchainHomeDirectory" value="$PROJECT_DIR$/../.cargo/bin" />
  </component>
  <component name="RustfmtProjectSettings">
    <option name="useRustfmt" value="true" />
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9823dce3aa75-b114ca120d71-intellij.indexing.shared.core-IU-242.18071.24" />
        <option value="bundled-js-predefined-d6986cc7102b-cec29f6fc0a3-JavaScript-IU-242.18071.24" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="e0a5c18e-66cc-4dfe-af26-0975bc296323" name="Changes" comment="" />
      <created>1719170004679</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1719170004679</updated>
      <workItem from="1719170005836" duration="55000" />
      <workItem from="1719170076659" duration="12518000" />
      <workItem from="1719184499066" duration="3206000" />
      <workItem from="1719266638518" duration="168000" />
      <workItem from="1719266812148" duration="4162000" />
      <workItem from="1719531932120" duration="4747000" />
      <workItem from="1719664493621" duration="78000" />
      <workItem from="1719664597910" duration="1684000" />
      <workItem from="1719766595850" duration="78000" />
      <workItem from="1719766705961" duration="85000" />
      <workItem from="1719766809599" duration="972000" />
      <workItem from="1719767928853" duration="1638000" />
      <workItem from="1720044510423" duration="23000" />
      <workItem from="1720044572986" duration="2880000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/src/tree.rs</url>
          <line>18</line>
          <option name="timeStamp" value="5" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
    <watches-manager>
      <configuration name="CargoCommandRunConfiguration">
        <watch expression="buffer" />
      </configuration>
    </watches-manager>
  </component>
</project>